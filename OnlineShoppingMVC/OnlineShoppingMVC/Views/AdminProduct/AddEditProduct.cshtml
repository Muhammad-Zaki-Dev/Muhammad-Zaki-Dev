@model OnlineShoppingMVC.Models._Product
    @using OnlineShoppingMVC.Models
@{
    var ColorList = MD_Color.GetTable(new _Color());
    var SizeList = MD_Size.GetTable(new _Size());
    var CategoryList = MD_Category.GetTable(new _Category());
    var subcate = MD_SubCategory.GetTable(new _SubCategory());
    
}
<div class="modal fade" id="ModalProduct" role="dialog">
    <div class="modal-dialog modal-lg">
        <div class="modal-content">
            <div class="modal-header">
                <h4 class="modal-title">Add Product</h4>
                <button type="button" class="close" data-dismiss="modal">&times;</button>
            </div>
            <div class="modal-body">

                <form id="FrmSaveProduct" method="post" enctype="multipart/form-data">
                    <div class="row">
                        <div class="col-md-6">
                            <div class="form-group">
                                <label>Post Title</label>
                                @if (Model != null)
                                {
                                    <input type="hidden" id="ProductID" name="ProductID" value="@Model.ProductID" />
                                }

                                @Html.TextBoxFor(a => a.ProductName, new { @class = "form-control", placeholder = "Product Name" })
                            </div>
                        </div>
                        <div class="col-md-6">
                            <div class="form-group">
                                <label>Product Price</label>


                                @Html.TextBoxFor(a => a.ProductPrice, new { @class = "form-control", placeholder = "Product Price" })
                                @Html.ValidationMessageFor(sms => sms.ProductPrice, "", new { @class = "text-danger" })
                            </div>
                        </div>
                    </div>
                    <div class="row">
                        <div class="col-md-6">

                            <div class="form-group">
                                <label>Status</label>
                                @Html.DropDownListFor(a => a.ProductStatus, new List<SelectListItem>
                            {
                                new SelectListItem{Text="Active",Value="1"},
                                new SelectListItem{Text="In-Active",Value="0"}
                                 }, "select Status", new { @class = "form-control" })
                            </div>

                        </div>
                        <div class="col-md-6">

                            <div class="form-group">
                                <label>Best Seller</label>
                                @Html.DropDownListFor(a => a.BestSeller, new List<SelectListItem>
                            {
                                new SelectListItem{Text="Yes",Value="1"},
                                new SelectListItem{Text="No",Value="0"}
                                 }, "select Status", new { @class = "form-control" })
                            </div>

                        </div>
                    </div>
                    <div class="row">
                        <div class="col-md-6">

                            <div class="form-group">
                                <label>Category</label>
                                <div style="display:flex">
                                    @Html.DropDownListFor(a => a.CategoryID, new SelectList(CategoryList, "CategoryID", "CategoryName"), "Select Size", new { @class = "form-control", onchange = "GetSubcategoryByCategoryID();" })
                                    <button type="button" class="btn btn-primary btn-lg" data-toggle="modal" data-target="#MyModalCategory" ><i class="fa fa-plus"></i></button>

                                </div>
                            </div>

                        </div>
                        <div class="col-md-6">

                            <div class="form-group">
                                <label>SubCategory</label>
                                <div style="display:flex">
                                    <select id="SubCategoryID" class="form-control">
                                    </select>
                                    <button type="button" class="btn btn-primary btn-lg" data-toggle="modal" data-target="#myModalSubCategory"><i class="fa fa-plus"></i></button>

                                </div>
                                

                            </div>

                        </div>
                    </div>
                    <div class="row">
                        <div class="col-md-6">

                            <div class="form-group">
                                <label>Sizes</label>
                                <div style="display:flex">
                                    @Html.DropDownListFor(a => a.SizeID, new SelectList(SizeList, "SizeID", "Size"), "Select Size", new { @class = "" })
                                    <button type="button" class="btn btn-primary btn-lg" data-toggle="modal" data-target="#ModalSize"><i class="fa fa-plus"></i></button>
                                </div>
                            </div>

                        </div>
                        <div class="col-md-6">

                            <div class="form-group">
                                <label>Colors</label>
                                <div style="display:flex">
                                    @Html.DropDownListFor(a => a.ColorID, new SelectList(ColorList, "ColorID", "Color"), "Select Color", new { @class = "" })
                                    <button type="button"  class="btn btn-primary btn-lg" data-toggle="modal" data-target="#ModalColor"><i class="fa fa-plus"></i></button>

                                </div>

                            </div>

                        </div>
                    </div>
                    <div class="row">
                        <div class="col-md-6">

                            <div class="form-group">
                                <label>Special Offer</label>
                                @Html.DropDownListFor(a => a.SpecialOffer, new List<SelectListItem>
                            {
                                new SelectListItem{Text="Yes",Value="1"},
                                new SelectListItem{Text="No",Value="0"}
                                 }, "select Status", new { @class = "form-control" })
                            </div>

                        </div>
                        <div class="col-md-6">

                            <div class="form-group">
                                <label>New Arrival</label>
                                @Html.DropDownListFor(a => a.NewArrival, new List<SelectListItem>
                            {
                                new SelectListItem{Text="Yes",Value="1"},
                                new SelectListItem{Text="No",Value="0"}
                                 }, "select Status", new { @class = "form-control" })
                            </div>

                        </div>
                    </div>
                    <div class="row">
                        <div class="col-md-6">

                            <div class="form-group">
                                <label>Trending</label>
                                @Html.DropDownListFor(a => a.Trending, new List<SelectListItem>
                            {
                                new SelectListItem{Text="Yes",Value="1"},
                                new SelectListItem{Text="No",Value="0"}
                                 }, "select Status", new { @class = "form-control" })
                            </div>

                        </div>
                        <div class="col-md-6">
                            <div class="form-group">
                                <label>Discount Percentage</label>


                                @Html.TextBoxFor(a => a.Discount, new { @class = "form-control", placeholder = "Product Discount" })
                            </div>
                        </div>
                    </div>

                    <div class="row">
                        <div class="col-md-12">
                            <div class="form-group">
                                <label>Image</label>

                                @if (Model != null)
                                {
                                    @Html.TextBoxFor(a => a.Image, new { @class = "form-control dropify", type = "file", placeholder = "Type Image", data_default_file = Model.ProductImage })
                                }
                                else
                                {
                                    @Html.TextBoxFor(a => a.Image, new { @class = "form-control dropify", type = "file", placeholder = "Type Image" })
                                }
                            </div>
                        </div>

                    </div>
                    <div class="row">
                        <div class="col-md-12">
                            <div class="form-group">
                                <label>Description</label>

                                @Html.TextAreaFor(a => a.ProductDescription, new { @class = "form-control tinymce" })
                            </div>
                        </div>

                    </div>

                    <div class="col-sm-6">
                        <input type="submit" class="btn btn-primary" form="FrmSaveProduct" value="Submit" />
                    </div>
                </form>

            </div>

        </div>
    </div>


    <script src="~/AdminAssets/plugins/dropify/js/dropify.min.js"></script>
    <script src="~/AdminAssets/plugins/tinymce/tinymce.min.js"></script>
    <script src="~/AdminAssets/plugins/tinymce/tinymce-data.js"></script>

    <script src="~/AdminAssets/selectize/js/standalone/selectize.min.js"></script>

    <script>
        $(document).ready(function () {
            $('.dropify').dropify();
            $("#SizeID").selectize({
                maxItems: 50,
            });
            $("#ColorID").selectize({
                maxItems: 50,
            });
            SaveProduct();
            $('#SizeID-selectized').css("Width","300px")
        });

        function SaveProduct() {
            $('#FrmSaveProduct').submit(function (event) {
                event.preventDefault();
                var check = $(this).valid();

                if (!check) {
                    return false;
                } else {
                    var frmdata = new FormData(document.getElementById('FrmSaveProduct'));
                    debugger;
                    $.ajax({
                        type: 'POST',
                        url: '/AdminProduct/Save',
                        processData: false,
                        contentType: false,
                        data: frmdata,
                        success: function (res) {
                            if (res == 1) {
                                toastr.success("Data is Saved");
                            } else if (res = 2) {
                                toastr.success("Data is Updated");
                            }
                            $('#ProductID').val(null);
                            GetProductList();
                        }
                    });
                }
            });
        }
    </script>


</div>